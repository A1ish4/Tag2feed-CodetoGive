// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  name         String
  password     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  donor        Donor?        @relation("Donor")
  beneficiary  Beneficiary?  @relation("Beneficiary")
  tags      Tag[]    @relation("UserTags")
}
model Donor {
  userId     Int      @id
  donations  Listing[]
  user       User     @relation("Donor", fields: [userId], references: [id])
  donorMatches       Match[]  @relation("DonorMatches")
  
}
model Beneficiary {
  userId     Int      @id
  size       Int
  user       User     @relation("Beneficiary", fields: [userId], references: [id])
  beneficaryMatches       Match[]  @relation("BeneficiaryMatches")
  listings  Listing[] @relation("ListingBeneficiaries")
}
model Listing {
  id             Int          @id @default(autoincrement())
  title          String
  description    String
  quantity       Int
  donorId        Int
  donor          Donor        @relation(fields: [donorId], references: [userId])
  tags           Tag[]        @relation("ListingTags")
  beneficiaries  Beneficiary[] @relation("ListingBeneficiaries")
  createdAt      DateTime     @default(now())
}
model Match {
  id              Int         @id @default(autoincrement())
  donorId         Int
  beneficiaryId   Int
  score           Float
  donor           Donor        @relation("DonorMatches", fields: [donorId], references: [userId])
  beneficiary     Beneficiary  @relation("BeneficiaryMatches", fields: [beneficiaryId], references: [userId])
}
model Tag {
  id           Int        @id @default(autoincrement())
  name         String
  timeframe    String?    // For modeling perishable items
  listings     Listing[]  @relation("ListingTags")
  users        User[]     @relation("UserTags")
}